//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int Radius = 1;
    public const int SelfDestructTimer = 2;
    public const int StatusVisuals = 3;
    public const int View = 4;
    public const int ViewId = 5;
    public const int ViewPrefab = 6;
    public const int Active = 7;
    public const int CharacterController = 8;
    public const int DurationFlag = 9;
    public const int EntityLink = 10;
    public const int Id = 11;
    public const int Rigidbody = 12;
    public const int SpriteRenderer = 13;
    public const int TimerCurrentValue = 14;
    public const int TimerMaxValue = 15;
    public const int TimerReady = 16;
    public const int TimerRelativeValue = 17;
    public const int Transform = 18;
    public const int AbilityId = 19;
    public const int GarlicAuraAbility = 20;
    public const int OrbitingMushroomAbility = 21;
    public const int ParentAbility = 22;
    public const int RecreatedOnUpgrade = 23;
    public const int UpgradeRequest = 24;
    public const int VegetableBoltAbility = 25;
    public const int ActiveCamera = 26;
    public const int Draft = 27;
    public const int Element = 28;
    public const int Potion = 29;
    public const int Reagent = 30;
    public const int Armament = 31;
    public const int EffectSetups = 32;
    public const int FollowingProducer = 33;
    public const int Processed = 34;
    public const int StatusSetups = 35;
    public const int TargetLimit = 36;
    public const int AudioListener = 37;
    public const int Camera = 38;
    public const int CameraId = 39;
    public const int CameraInitialLookSpeedX = 40;
    public const int CameraInitialLookSpeedY = 41;
    public const int CameraLowerLookLimit = 42;
    public const int CameraToggler = 43;
    public const int CameraUpperLookLimit = 44;
    public const int Collectable = 45;
    public const int Collected = 46;
    public const int Cooldown = 47;
    public const int CooldownLeft = 48;
    public const int CooldownUp = 49;
    public const int CurrentRaycastDistance = 50;
    public const int Desk = 51;
    public const int DamageEffect = 52;
    public const int Effect = 53;
    public const int EffectValue = 54;
    public const int HealEffect = 55;
    public const int ProducerId = 56;
    public const int TargetId = 57;
    public const int EnchantsHolder = 58;
    public const int EnchantTypeId = 59;
    public const int EnchantVisuals = 60;
    public const int ExplosiveEnchant = 61;
    public const int PoisonEnchant = 62;
    public const int Flask = 63;
    public const int MixingFlask = 64;
    public const int MixingFlaskShakePoint = 65;
    public const int MixingFlaskShaker = 66;
    public const int MixingFlaskStationaryPoint = 67;
    public const int GameplayStateChanger = 68;
    public const int GameplayStateHolder = 69;
    public const int Highlightable = 70;
    public const int HighlightEffect = 71;
    public const int Highlighter = 72;
    public const int HighlightHolder = 73;
    public const int Hightlighted = 74;
    public const int InitialHighlightRange = 75;
    public const int UnHighlighted = 76;
    public const int HorizontalRotation = 77;
    public const int InitialInteractDistance = 78;
    public const int AxisInput = 79;
    public const int CrouchKey = 80;
    public const int ExitKey = 81;
    public const int InterractKey = 82;
    public const int JumpKey = 83;
    public const int MouseInput = 84;
    public const int SprintKey = 85;
    public const int UserInput = 86;
    public const int Interactable = 87;
    public const int InteractableActionName = 88;
    public const int InteractableName = 89;
    public const int InteractCamera = 90;
    public const int Interacted = 91;
    public const int Inventory = 92;
    public const int Item = 93;
    public const int CurrentHp = 94;
    public const int Dead = 95;
    public const int MaxHp = 96;
    public const int ProcessingDeath = 97;
    public const int AbleToCrouch = 98;
    public const int AbleToHeadBob = 99;
    public const int AbleToJump = 100;
    public const int AbleToMove = 101;
    public const int AbleToSprint = 102;
    public const int Crouching = 103;
    public const int CrouchingAnimation = 104;
    public const int CurrentMoveSpeed = 105;
    public const int Grounded = 106;
    public const int HorizontalDirection = 107;
    public const int InitialCrouchSpeed = 108;
    public const int InitialGravity = 109;
    public const int InitialJumpForce = 110;
    public const int InitialSprintSpeed = 111;
    public const int InitialWalkSpeed = 112;
    public const int Jumped = 113;
    public const int MovableByCharacterController = 114;
    public const int MovableByRigidbody = 115;
    public const int MovableByTransform = 116;
    public const int MovableByWorldPosition = 117;
    public const int MoveDirection = 118;
    public const int MovementReady = 119;
    public const int Moving = 120;
    public const int WorldPosition = 121;
    public const int CrouchCenter = 122;
    public const int CrouchHeight = 123;
    public const int Player = 124;
    public const int PlayerHeadBobSprintTimer = 125;
    public const int PlayerHeadBobWalkTimer = 126;
    public const int PlayerVisualsToggler = 127;
    public const int SprintBobAmount = 128;
    public const int SprintBobSpeed = 129;
    public const int StandingCenter = 130;
    public const int StandingHeight = 131;
    public const int TimeToCrouch = 132;
    public const int UseFootSteps = 133;
    public const int WalkBobAmount = 134;
    public const int WalkBobSpeed = 135;
    public const int DefaultPositionY = 136;
    public const int PlayerCamera = 137;
    public const int RotationReady = 138;
    public const int SingleRayCaster = 139;
    public const int AlchemyStateChanger = 140;
    public const int AlchemyStateHolder = 141;
    public const int FromAlchemyCookingStateTransitionFlag = 142;
    public const int FromAlchemyFlaskShakingStateTransitionFlag = 143;
    public const int FromAlchemyIdleStateTransitionFlag = 144;
    public const int FromAlchemyMixingStateTransitionFlag = 145;
    public const int FromAlchemyPreparaionStateTransitionFlag = 146;
    public const int ToAlchemyCookingStateTransitionFlag = 147;
    public const int ToAlchemyFlaskShakingStateTransitionFlag = 148;
    public const int ToAlchemyIdleStateTransitionFlag = 149;
    public const int ToAlchemyMixingStateTransitionFlag = 150;
    public const int ToAlchemyPreparaionStateTransitionFlag = 151;
    public const int BaseStats = 152;
    public const int StatChange = 153;
    public const int StatModifiers = 154;
    public const int Affected = 155;
    public const int Applied = 156;
    public const int ApplierStatusLink = 157;
    public const int Duration = 158;
    public const int Freeze = 159;
    public const int Period = 160;
    public const int Poison = 161;
    public const int Status = 162;
    public const int StatusTypeId = 163;
    public const int TimeLeft = 164;
    public const int TimeSinceLastTick = 165;
    public const int Unapplied = 166;
    public const int CollectingTargetsContinuously = 167;
    public const int CollectTargetsInterval = 168;
    public const int CollectTargetsTimer = 169;
    public const int LayerMask = 170;
    public const int ProcessedTargets = 171;
    public const int Reached = 172;
    public const int ReadyToCollectTargets = 173;
    public const int TargetBuffer = 174;
    public const int Transition = 175;
    public const int VerticalRotation = 176;

    public const int TotalComponents = 177;

    public static readonly string[] componentNames = {
        "Destructed",
        "Radius",
        "SelfDestructTimer",
        "StatusVisuals",
        "View",
        "ViewId",
        "ViewPrefab",
        "Active",
        "CharacterController",
        "DurationFlag",
        "EntityLink",
        "Id",
        "Rigidbody",
        "SpriteRenderer",
        "TimerCurrentValue",
        "TimerMaxValue",
        "TimerReady",
        "TimerRelativeValue",
        "Transform",
        "AbilityId",
        "GarlicAuraAbility",
        "OrbitingMushroomAbility",
        "ParentAbility",
        "RecreatedOnUpgrade",
        "UpgradeRequest",
        "VegetableBoltAbility",
        "ActiveCamera",
        "Draft",
        "Element",
        "Potion",
        "Reagent",
        "Armament",
        "EffectSetups",
        "FollowingProducer",
        "Processed",
        "StatusSetups",
        "TargetLimit",
        "AudioListener",
        "Camera",
        "CameraId",
        "CameraInitialLookSpeedX",
        "CameraInitialLookSpeedY",
        "CameraLowerLookLimit",
        "CameraToggler",
        "CameraUpperLookLimit",
        "Collectable",
        "Collected",
        "Cooldown",
        "CooldownLeft",
        "CooldownUp",
        "CurrentRaycastDistance",
        "Desk",
        "DamageEffect",
        "Effect",
        "EffectValue",
        "HealEffect",
        "ProducerId",
        "TargetId",
        "EnchantsHolder",
        "EnchantTypeId",
        "EnchantVisuals",
        "ExplosiveEnchant",
        "PoisonEnchant",
        "Flask",
        "MixingFlask",
        "MixingFlaskShakePoint",
        "MixingFlaskShaker",
        "MixingFlaskStationaryPoint",
        "GameplayStateChanger",
        "GameplayStateHolder",
        "Highlightable",
        "HighlightEffect",
        "Highlighter",
        "HighlightHolder",
        "Hightlighted",
        "InitialHighlightRange",
        "UnHighlighted",
        "HorizontalRotation",
        "InitialInteractDistance",
        "AxisInput",
        "CrouchKey",
        "ExitKey",
        "InterractKey",
        "JumpKey",
        "MouseInput",
        "SprintKey",
        "UserInput",
        "Interactable",
        "InteractableActionName",
        "InteractableName",
        "InteractCamera",
        "Interacted",
        "Inventory",
        "Item",
        "CurrentHp",
        "Dead",
        "MaxHp",
        "ProcessingDeath",
        "AbleToCrouch",
        "AbleToHeadBob",
        "AbleToJump",
        "AbleToMove",
        "AbleToSprint",
        "Crouching",
        "CrouchingAnimation",
        "CurrentMoveSpeed",
        "Grounded",
        "HorizontalDirection",
        "InitialCrouchSpeed",
        "InitialGravity",
        "InitialJumpForce",
        "InitialSprintSpeed",
        "InitialWalkSpeed",
        "Jumped",
        "MovableByCharacterController",
        "MovableByRigidbody",
        "MovableByTransform",
        "MovableByWorldPosition",
        "MoveDirection",
        "MovementReady",
        "Moving",
        "WorldPosition",
        "CrouchCenter",
        "CrouchHeight",
        "Player",
        "PlayerHeadBobSprintTimer",
        "PlayerHeadBobWalkTimer",
        "PlayerVisualsToggler",
        "SprintBobAmount",
        "SprintBobSpeed",
        "StandingCenter",
        "StandingHeight",
        "TimeToCrouch",
        "UseFootSteps",
        "WalkBobAmount",
        "WalkBobSpeed",
        "DefaultPositionY",
        "PlayerCamera",
        "RotationReady",
        "SingleRayCaster",
        "AlchemyStateChanger",
        "AlchemyStateHolder",
        "FromAlchemyCookingStateTransitionFlag",
        "FromAlchemyFlaskShakingStateTransitionFlag",
        "FromAlchemyIdleStateTransitionFlag",
        "FromAlchemyMixingStateTransitionFlag",
        "FromAlchemyPreparaionStateTransitionFlag",
        "ToAlchemyCookingStateTransitionFlag",
        "ToAlchemyFlaskShakingStateTransitionFlag",
        "ToAlchemyIdleStateTransitionFlag",
        "ToAlchemyMixingStateTransitionFlag",
        "ToAlchemyPreparaionStateTransitionFlag",
        "BaseStats",
        "StatChange",
        "StatModifiers",
        "Affected",
        "Applied",
        "ApplierStatusLink",
        "Duration",
        "Freeze",
        "Period",
        "Poison",
        "Status",
        "StatusTypeId",
        "TimeLeft",
        "TimeSinceLastTick",
        "Unapplied",
        "CollectingTargetsContinuously",
        "CollectTargetsInterval",
        "CollectTargetsTimer",
        "LayerMask",
        "ProcessedTargets",
        "Reached",
        "ReadyToCollectTargets",
        "TargetBuffer",
        "Transition",
        "VerticalRotation"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Destructed),
        typeof(Code.Common.Radius),
        typeof(Code.Common.SelfDestructTimer),
        typeof(Code.Common.StatusVisualsComponent),
        typeof(Code.Common.View),
        typeof(Code.Common.ViewId),
        typeof(Code.Common.ViewPrefab),
        typeof(Code.Gameplay.Common.Active),
        typeof(Code.Gameplay.Common.CharacterControllerComponent),
        typeof(Code.Gameplay.Common.DurationFlag),
        typeof(Code.Gameplay.Common.EntityLink),
        typeof(Code.Gameplay.Common.Id),
        typeof(Code.Gameplay.Common.RigidbodyComponent),
        typeof(Code.Gameplay.Common.SpriteRendererComponent),
        typeof(Code.Gameplay.Common.Timers.TimerCurrentValue),
        typeof(Code.Gameplay.Common.Timers.TimerMaxValue),
        typeof(Code.Gameplay.Common.Timers.TimerReady),
        typeof(Code.Gameplay.Common.Timers.TimerRelativeValue),
        typeof(Code.Gameplay.Common.TransformComponent),
        typeof(Code.Gameplay.Features.Abilities.AbilityIdComponent),
        typeof(Code.Gameplay.Features.Abilities.GarlicAuraAbility),
        typeof(Code.Gameplay.Features.Abilities.OrbitingMushroomAbility),
        typeof(Code.Gameplay.Features.Abilities.ParentAbility),
        typeof(Code.Gameplay.Features.Abilities.RecreatedOnUpgrade),
        typeof(Code.Gameplay.Features.Abilities.UpgradeRequest),
        typeof(Code.Gameplay.Features.Abilities.VegetableBoltAbility),
        typeof(Code.Gameplay.Features.ActiveCamera),
        typeof(Code.Gameplay.Features.Alchemy.Draft),
        typeof(Code.Gameplay.Features.Alchemy.Element),
        typeof(Code.Gameplay.Features.Alchemy.Potion),
        typeof(Code.Gameplay.Features.Alchemy.Reagent),
        typeof(Code.Gameplay.Features.Armaments.Armament),
        typeof(Code.Gameplay.Features.Armaments.EffectSetups),
        typeof(Code.Gameplay.Features.Armaments.FollowingProducer),
        typeof(Code.Gameplay.Features.Armaments.Processed),
        typeof(Code.Gameplay.Features.Armaments.StatusSetups),
        typeof(Code.Gameplay.Features.Armaments.TargetLimit),
        typeof(Code.Gameplay.Features.AudioListeners.AudioListenerComponent),
        typeof(Code.Gameplay.Features.CameraComponent),
        typeof(Code.Gameplay.Features.CameraIdComponent),
        typeof(Code.Gameplay.Features.CameraInitialLookSpeedX),
        typeof(Code.Gameplay.Features.CameraInitialLookSpeedY),
        typeof(Code.Gameplay.Features.CameraLowerLookLimit),
        typeof(Code.Gameplay.Features.CameraToggler),
        typeof(Code.Gameplay.Features.CameraUpperLookLimit),
        typeof(Code.Gameplay.Features.Collect.Collectable),
        typeof(Code.Gameplay.Features.Collect.Collected),
        typeof(Code.Gameplay.Features.Cooldown.Cooldown),
        typeof(Code.Gameplay.Features.Cooldown.CooldownLeft),
        typeof(Code.Gameplay.Features.Cooldown.CooldownUp),
        typeof(Code.Gameplay.Features.CurrentRaycastDistance),
        typeof(Code.Gameplay.Features.Desk.Desk),
        typeof(Code.Gameplay.Features.Effects.DamageEffect),
        typeof(Code.Gameplay.Features.Effects.Effect),
        typeof(Code.Gameplay.Features.Effects.EffectValue),
        typeof(Code.Gameplay.Features.Effects.HealEffect),
        typeof(Code.Gameplay.Features.Effects.ProducerId),
        typeof(Code.Gameplay.Features.Effects.TargetId),
        typeof(Code.Gameplay.Features.Enchants.EnchantsHolderComponent),
        typeof(Code.Gameplay.Features.Enchants.EnchantTypeIdComponent),
        typeof(Code.Gameplay.Features.Enchants.EnchantVisualsComponent),
        typeof(Code.Gameplay.Features.Enchants.ExplosiveEnchant),
        typeof(Code.Gameplay.Features.Enchants.PoisonEnchant),
        typeof(Code.Gameplay.Features.Flasks.Flask),
        typeof(Code.Gameplay.Features.Flasks.MixingFlask),
        typeof(Code.Gameplay.Features.Flasks.MixingFlaskShakePoint),
        typeof(Code.Gameplay.Features.Flasks.MixingFlaskShakerComponent),
        typeof(Code.Gameplay.Features.Flasks.MixingFlaskStationaryPoint),
        typeof(Code.Gameplay.Features.GameplayStateChanger),
        typeof(Code.Gameplay.Features.GameplayStateHolder),
        typeof(Code.Gameplay.Features.Highlight.Highlightable),
        typeof(Code.Gameplay.Features.Highlight.HighlightEffectComponent),
        typeof(Code.Gameplay.Features.Highlight.HighlighterComponent),
        typeof(Code.Gameplay.Features.Highlight.HighlightHolder),
        typeof(Code.Gameplay.Features.Highlight.Hightlighted),
        typeof(Code.Gameplay.Features.Highlight.InitialHighlightRange),
        typeof(Code.Gameplay.Features.Highlight.UnHighlighted),
        typeof(Code.Gameplay.Features.HorizontalRotation),
        typeof(Code.Gameplay.Features.InitialInteractDistance),
        typeof(Code.Gameplay.Features.Inputs.AxisInput),
        typeof(Code.Gameplay.Features.Inputs.CrouchKey),
        typeof(Code.Gameplay.Features.Inputs.ExitKey),
        typeof(Code.Gameplay.Features.Inputs.InterractKey),
        typeof(Code.Gameplay.Features.Inputs.JumpKey),
        typeof(Code.Gameplay.Features.Inputs.MouseInput),
        typeof(Code.Gameplay.Features.Inputs.SprintKey),
        typeof(Code.Gameplay.Features.Inputs.UserInput),
        typeof(Code.Gameplay.Features.Interactable),
        typeof(Code.Gameplay.Features.InteractableActionName),
        typeof(Code.Gameplay.Features.InteractableName),
        typeof(Code.Gameplay.Features.InteractCamera),
        typeof(Code.Gameplay.Features.Interacted),
        typeof(Code.Gameplay.Features.Inventories.Inventory),
        typeof(Code.Gameplay.Features.Items.Item),
        typeof(Code.Gameplay.Features.Lifetime.CurrentHp),
        typeof(Code.Gameplay.Features.Lifetime.Dead),
        typeof(Code.Gameplay.Features.Lifetime.MaxHp),
        typeof(Code.Gameplay.Features.Lifetime.ProcessingDeath),
        typeof(Code.Gameplay.Features.Movement.AbleToCrouch),
        typeof(Code.Gameplay.Features.Movement.AbleToHeadBob),
        typeof(Code.Gameplay.Features.Movement.AbleToJump),
        typeof(Code.Gameplay.Features.Movement.AbleToMove),
        typeof(Code.Gameplay.Features.Movement.AbleToSprint),
        typeof(Code.Gameplay.Features.Movement.Crouching),
        typeof(Code.Gameplay.Features.Movement.CrouchingAnimation),
        typeof(Code.Gameplay.Features.Movement.CurrentMoveSpeed),
        typeof(Code.Gameplay.Features.Movement.Grounded),
        typeof(Code.Gameplay.Features.Movement.HorizontalDirection),
        typeof(Code.Gameplay.Features.Movement.InitialCrouchSpeed),
        typeof(Code.Gameplay.Features.Movement.InitialGravity),
        typeof(Code.Gameplay.Features.Movement.InitialJumpForce),
        typeof(Code.Gameplay.Features.Movement.InitialSprintSpeed),
        typeof(Code.Gameplay.Features.Movement.InitialWalkSpeed),
        typeof(Code.Gameplay.Features.Movement.Jumped),
        typeof(Code.Gameplay.Features.Movement.MovableByCharacterController),
        typeof(Code.Gameplay.Features.Movement.MovableByRigidbody),
        typeof(Code.Gameplay.Features.Movement.MovableByTransform),
        typeof(Code.Gameplay.Features.Movement.MovableByWorldPosition),
        typeof(Code.Gameplay.Features.Movement.MoveDirection),
        typeof(Code.Gameplay.Features.Movement.MovementReady),
        typeof(Code.Gameplay.Features.Movement.Moving),
        typeof(Code.Gameplay.Features.Movement.WorldPosition),
        typeof(Code.Gameplay.Features.Player.CrouchCenter),
        typeof(Code.Gameplay.Features.Player.CrouchHeight),
        typeof(Code.Gameplay.Features.Player.Player),
        typeof(Code.Gameplay.Features.Player.PlayerHeadBobSprintTimer),
        typeof(Code.Gameplay.Features.Player.PlayerHeadBobWalkTimer),
        typeof(Code.Gameplay.Features.Player.PlayerVisualsTogglerComponent),
        typeof(Code.Gameplay.Features.Player.SprintBobAmount),
        typeof(Code.Gameplay.Features.Player.SprintBobSpeed),
        typeof(Code.Gameplay.Features.Player.StandingCenter),
        typeof(Code.Gameplay.Features.Player.StandingHeight),
        typeof(Code.Gameplay.Features.Player.TimeToCrouch),
        typeof(Code.Gameplay.Features.Player.UseFootSteps),
        typeof(Code.Gameplay.Features.Player.WalkBobAmount),
        typeof(Code.Gameplay.Features.Player.WalkBobSpeed),
        typeof(Code.Gameplay.Features.PlayerCameras.DefaultPositionY),
        typeof(Code.Gameplay.Features.PlayerCameras.PlayerCamera),
        typeof(Code.Gameplay.Features.RotationReady),
        typeof(Code.Gameplay.Features.SingleRayCaster),
        typeof(Code.Gameplay.Features.States.AlchemyStates.AlchemyStateChanger),
        typeof(Code.Gameplay.Features.States.AlchemyStates.AlchemyStateHolder),
        typeof(Code.Gameplay.Features.States.AlchemyStates.FromAlchemyCookingStateTransitionFlag),
        typeof(Code.Gameplay.Features.States.AlchemyStates.FromAlchemyFlaskShakingStateTransitionFlag),
        typeof(Code.Gameplay.Features.States.AlchemyStates.FromAlchemyIdleStateTransitionFlag),
        typeof(Code.Gameplay.Features.States.AlchemyStates.FromAlchemyMixingStateTransitionFlag),
        typeof(Code.Gameplay.Features.States.AlchemyStates.FromAlchemyPreparaionStateTransitionFlag),
        typeof(Code.Gameplay.Features.States.AlchemyStates.ToAlchemyCookingStateTransitionFlag),
        typeof(Code.Gameplay.Features.States.AlchemyStates.ToAlchemyFlaskShakingStateTransitionFlag),
        typeof(Code.Gameplay.Features.States.AlchemyStates.ToAlchemyIdleStateTransitionFlag),
        typeof(Code.Gameplay.Features.States.AlchemyStates.ToAlchemyMixingStateTransitionFlag),
        typeof(Code.Gameplay.Features.States.AlchemyStates.ToAlchemyPreparaionStateTransitionFlag),
        typeof(Code.Gameplay.Features.Stats.BaseStats),
        typeof(Code.Gameplay.Features.Stats.StatChange),
        typeof(Code.Gameplay.Features.Stats.StatModifiers),
        typeof(Code.Gameplay.Features.Statuses.Affected),
        typeof(Code.Gameplay.Features.Statuses.Applied),
        typeof(Code.Gameplay.Features.Statuses.ApplierStatusLink),
        typeof(Code.Gameplay.Features.Statuses.Duration),
        typeof(Code.Gameplay.Features.Statuses.Freeze),
        typeof(Code.Gameplay.Features.Statuses.Period),
        typeof(Code.Gameplay.Features.Statuses.Poison),
        typeof(Code.Gameplay.Features.Statuses.Status),
        typeof(Code.Gameplay.Features.Statuses.StatusTypeIdComponent),
        typeof(Code.Gameplay.Features.Statuses.TimeLeft),
        typeof(Code.Gameplay.Features.Statuses.TimeSinceLastTick),
        typeof(Code.Gameplay.Features.Statuses.Unapplied),
        typeof(Code.Gameplay.Features.TargetCollection.CollectingTargetsContinuously),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsInterval),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsTimer),
        typeof(Code.Gameplay.Features.TargetCollection.LayerMask),
        typeof(Code.Gameplay.Features.TargetCollection.ProcessedTargets),
        typeof(Code.Gameplay.Features.TargetCollection.Reached),
        typeof(Code.Gameplay.Features.TargetCollection.ReadyToCollectTargets),
        typeof(Code.Gameplay.Features.TargetCollection.TargetBuffer),
        typeof(Code.Gameplay.Features.Transition),
        typeof(Code.Gameplay.Features.VerticalRotation)
    };
}
